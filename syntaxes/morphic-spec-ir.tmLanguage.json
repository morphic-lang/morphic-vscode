{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Morphic Representation-Specialized IR",
  "scopeName": "source.spec-ir",
	"patterns": [
    {
      "include": "#line_comment"
    },
    {
      "include": "#func"
    },
    {
      "include": "#custom_type"
    },
    {
      "include": "#builtin_type"
    },
    {
      "include": "#var"
    },
    {
      "include": "#keyword"
    },
    {
      "include": "#constant"
    }
  ],
  "repository": {
    "line_comment": {
			"begin": "//",
			"end": "$",
			"name": "comment.line.double-slash.morphic"
    },
    "func": {
      "match": "\\b([A-Za-z0-9_\\.]+)(\\#)([0-9]+)\\b",
      "captures": {
        "1": {
          "name": "entity.name.function.spec-ir"
        },
        "2": {
          "name": "punctuation.spec-ir"
        },
        "3": {
          "name": "entity.name.function.spec-ir"
        }
      }
    },
    "custom_type": {
      "match": "\\b([A-Za-z0-9_\\.]+)(\\~)([0-9]+)\\b",
      "captures": {
        "1": {
          "name": "storage.type.spec-ir"
        },
        "2": {
          "name": "punctuation.spec-ir"
        },
        "3": {
          "name": "storage.type.spec-ir"
        }
      }
    },
    "builtin_type": {
      "match": "\\b(Array|HoleArray|Int|Byte|Float|Bool)\\b",
      "name": "storage.type.spec-ir"
    },
    "keyword": {
      "patterns": [
        {
          "match": "\\+|\\-|\\*|/|<|>|=",
          "name": "keyword.operator.spec-ir"
        },
        {
          "match": "\\b(func|variant|custom|mut|immut|call|branch|let|in|tuple|field|type|wrap|unwrap|item|len|push|pop|replace|reserve|input|output|panic|retain|release)\\b",
          "name": "keyword.spec-ir"
        }
      ]
    },
    "var": {
      "match": "\\b%[0-9]+\\b",
      "name": "variable.language.spec-ir"
    },
    "constant": {
      "patterns": [
        {
          "match": "(?<!%)\\b[0-9]+(\\.[0-9]*)?\\b",
          "name": "constant.numeric.spec-ir"
        },
        {
          "match": "\\b(True|False)\\b",
          "name": "constant.spec-ir"
        },
        {
          "match": "'((\\.')|[^']*)'",
          "name": "string.quoted.single.spec-ir"
        },
        {
          "match": "\"((\\.\")|[^']*)\"",
          "name": "string.quoted.double.spec-ir"
        }
      ]
    }
  }
}
